
name: CI Windows

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{matrix.os}}
    
    defaults:
      run:
        shell: bash
    
    strategy:
      matrix:
        os: [windows-2022, windows-2025]
        architecture: [x86, x64]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup MSVC
      uses: TheMrMilchmann/setup-msvc-dev@v2
      with:
        arch: ${{matrix.architecture}}
        
    - name: Generate headers
      run: |
        cmake -B build -G Ninja                        \
          -D VULKAN_HPP_GENERATOR_BUILD=ON             \
          -D VULKAN_HPP_RUN_GENERATOR=ON               \
          -D VULKAN_HPP_SAMPLES_BUILD=OFF              \
          -D VULKAN_HPP_TESTS_BUILD=OFF                \
          -D VULKAN_HPP_ENABLE_CPP20_MODULES=OFF       \
          -D VULKAN_HPP_DISPATCH_LOADER_DYNAMIC=ON     \
          -D VULKAN_HPP_BUILD_WITH_LOCAL_VULKAN_HPP=ON \
          -D VULKAN_HPP_PRECOMPILE=OFF                 \
          -D CMAKE_CXX_STANDARD=20                     \
          -D CMAKE_BUILD_TYPE=Release
        cmake --build build --parallel

    - name: Build samples and tests
      run: |
        for CXX_STANDARD in 11 14 17 20 23; do
          for BUILD_TYPE in Debug Release; do
            CXX_MODULES=${{(contains(fromJSON('["windows-2019"]'), matrix.os) || vars.CXX_STANDARD < 20) && 'OFF' || 'ON'}}
            cmake -B build -G Ninja --fresh                   \
              -D VULKAN_HPP_GENERATOR_BUILD=OFF               \
              -D VULKAN_HPP_RUN_GENERATOR=OFF                 \
              -D VULKAN_HPP_SAMPLES_BUILD=ON                  \
              -D VULKAN_HPP_TESTS_BUILD=ON                    \
              -D VULKAN_HPP_ENABLE_CPP20_MODULES=$CXX_MODULES \
              -D VULKAN_HPP_DISPATCH_LOADER_DYNAMIC=ON        \
              -D VULKAN_HPP_BUILD_WITH_LOCAL_VULKAN_HPP=ON    \
              -D VULKAN_HPP_PRECOMPILE=OFF                    \
              -D CMAKE_CXX_STANDARD=$CXX_STANDARD             \
              -D CMAKE_BUILD_TYPE=$BUILD_TYPE
            cmake --build build --parallel --clean-first
          done
        done
